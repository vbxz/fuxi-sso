<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smart.sso.server.dao.UserDao">
	<select id="get" parameterType="java.lang.Integer" resultType="User">
     	SELECT * 
     	FROM user a
     	WHERE id = #{id}
    </select>
    
	<insert id="insert" parameterType="User" statementType="PREPARED" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO user(
			account,
			password,
			mobile,
			last_login_ip,
			last_login_time,
			login_count,
			create_time,
			is_enable,
			email,
			real_name,
			nickname,
			sex,
			province,
			city,
			area,
			country,
			head_img_url,
			wx_open_id,
			wx_web_open_id,
			wx_union_id,
			province_code,
			city_code,
			area_code
		) 
		VALUES (
			#{account},
			#{password},
			#{mobile},
			#{lastLoginIp},
			#{lastLoginTime},
			#{loginCount},
			#{createTime},
			#{isEnable},
			#{email},
			#{realName},
			#{nickname},
			#{sex},
			#{province},
			#{city},
			#{area},
			#{country},
			#{headImgUrl},
			#{wxOpenId},
			#{wxWebOpenId},
			#{wxUnionId},
			#{provinceCode},
			#{cityCode},
			#{areaCode}
		)
	</insert>
	
    <update id="update" parameterType="User" statementType="PREPARED">
		UPDATE user a SET
			a.account = #{account},
			a.password = #{password},
			a.last_login_ip = #{lastLoginIp},
			a.last_login_time = #{lastLoginTime},
			a.login_count = #{loginCount},
			a.is_enable = #{isEnable},
			a.mobile = #{mobile},
			a.email = #{email},
			a.real_name = #{realName},
			a.nickname = #{nickname},
			a.sex = #{sex},
			a.province = #{province},
			a.city = #{city},
			a.area = #{area},
			a.country = #{country},
			a.head_img_url = #{headImgUrl},
			a.wx_open_id = #{wxOpenId},
			a.wx_union_id = #{wxUnionId},
			a.province_code = #{provinceCode},
			a.city_code = #{cityCode},
			a.area_code = #{areaCode}
		WHERE a.id = #{id}
	</update>

	<update id="updateLoginInfo" parameterType="User">
		UPDATE user a SET
		a.last_login_ip = #{lastLoginIp},
		a.last_login_time = #{lastLoginTime},
		a.login_count = #{loginCount}
		WHERE a.id = #{id}
	</update>
	
	<update id="enable" parameterType="map" statementType="PREPARED">
		UPDATE user a SET
			a.is_enable = #{isEnable}
		WHERE 1 = 1
		<if test="idList != null">
			AND a.id in <foreach collection="idList" item="item" open="(" separator="," close=")">#{item}</foreach>
		</if>
	</update>
	
	<update id="resetPassword" parameterType="map" statementType="PREPARED">
		UPDATE user a SET
			a.password = #{password}
		WHERE 1 = 1
		<if test="idList != null">
			AND a.id in <foreach collection="idList" item="item" open="(" separator="," close=")">#{item}</foreach>
		</if>
	</update>
	
	<select id="findPaginationByAccount" parameterType="map" resultType="User">   
		SELECT * 
     	FROM user a
     	WHERE 1 = 1
     	<if test="account != null and account != '' ">
			AND a.account like CONCAT('%',#{account},'%')
		</if>
     	ORDER BY a.create_time DESC
	</select>
	
	<select id="findByAccount" parameterType="map" resultType="User">   
		SELECT a.* 
     	FROM user a
     	WHERE 1 = 1
     	<if test="account != null and account != '' ">
			AND a.account = #{account} 
		</if>
	</select>

	<select id="findByWeiXinOpenId" parameterType="map" resultType="User">
		SELECT a.*
		FROM user a
		WHERE a.wx_open_id = #{wxOpenId}
	</select>

	<select id="findByWeiXinWebOpenId" parameterType="map" resultType="User">
		SELECT a.*
		FROM user a
		WHERE a.wx_web_open_id = #{wxWebOpenId}
	</select>

	<select id="findById" parameterType="map" resultType="User">
		SELECT a.*
		FROM user a
		WHERE a.id = #{id}
	</select>
	
	<delete id="deleteById" parameterType="list" statementType="PREPARED">
		DELETE FROM user
		<choose>
			<when test="list == null or list.size() == 0">
				WHERE 1 != 1
			</when>
			<when test="list.size() == 1">
				WHERE id = <foreach collection="list" item="id">#{id}</foreach>
			</when>
			<otherwise>
				WHERE id in <foreach collection="list" item="id" open="(" separator="," close=")">#{id}</foreach>
			</otherwise>
		</choose>
	</delete>
</mapper>